{"version":3,"file":"static/js/240.d53eacca.chunk.js","mappings":"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","sources":["components/Error/index.tsx","pages/projects/ViewProject/index.tsx","../node_modules/@mui/icons-material/AccountTree.js"],"sourcesContent":["import React from 'react';\n// @mui components\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport useTheme from '@mui/material/styles/useTheme';\n\ninterface ErrorProps {\n    message?: string;\n}\n\nconst Error: React.FC<ErrorProps> = (props: ErrorProps) => {\n    /* \n    A simple abstract component to show error throughout the app\n    */\n    const {message} = props;\n    const APP_THEME = useTheme();\n\n    return (\n        <Alert severity='error' variant=\"standard\" sx={{boxShadow: APP_THEME.shadows[\"1\"]}}>\n            <AlertTitle>Error</AlertTitle>\n                {message}\n        </Alert>\n    )\n};\n\nexport default Error;","import React, {useEffect, useState} from 'react';\nimport {useNavigate, useLoaderData} from 'react-router-dom';\n// @mui components\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Skeleton from '@mui/material/Skeleton';\n// @mui icons\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n// Types\nimport {ViewProjectAPIResponse} from '../types';\n// Other components\nimport AppCard from '../../home/components/AppCard';\nimport Error from '../../../components/Error';\n// MD parser and html react parser\nimport {marked} from 'marked';\nimport HTMLReactParser from 'html-react-parser';\nimport hljs from 'highlight.js';\n\nconst ViewProject: React.FC = () => {\n\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [error, setError] = useState<boolean>(false);\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n    const [data, setData] = useState<ViewProjectAPIResponse[\"item\"]>();\n    const [parsedContent, setParsedContent] = useState<ReturnType<typeof HTMLReactParser>>();\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    // Data api from the loader\n    const dataAPI = useLoaderData() as {response: Promise<Response>};\n\n    // Clear data whenever the component is mounted or unmounted\n    const init = () => {\n        setIsLoading(true); setError(false); setErrorMessage(\"\");\n        setData(undefined); setParsedContent(undefined);\n    }\n\n    // When the component is mounted\n    // Attach an eventlistener to update the width whenever the width of the window changes\n    // removeEventlistener on component unmount\n    useEffect(() => {\n        const updateWidth = () => {\n            setWidth(window.innerWidth);\n        };\n        window.addEventListener(\"resize\", updateWidth);\n\n        // Destructor\n        return () => {\n            window.removeEventListener(\"resize\", updateWidth);\n        }\n    }, []);\n\n    // Router dom\n    const navigate = useNavigate();\n\n    // Navigate to prev page\n    const goBack = () => {\n        navigate(\"/projects/\");\n    }\n\n    // Use the dataAPI from the loader to update data\n    useEffect(() => {\n        // Initialize states\n        init();\n\n        // Fetch\n        dataAPI.response\n        .then((response) => response.json())\n        .then((response: ViewProjectAPIResponse) => {\n            if (response.status === \"OK\") {\n                setData(response.item);\n                setError(false); setErrorMessage(\"\");\n                setParsedContent(HTMLReactParser(marked(response.item.content)));\n            } else {\n                // Else, NOT FOUND\n                throw 404;\n            }\n        })\n        .catch((e) => {\n            // An error occured\n            setError(true);\n            setErrorMessage(e === 404 ? \"Not found.\" : \"Sorry, an unknown error occured.\");\n        })\n        .finally(() => {\n            setIsLoading(false);\n        })\n\n        // Destructor to delete all the items in context\n        return () => init();\n\n    }, [dataAPI]);\n\n    useEffect(() => {\n        // Highlight after 1000ms to ensure all code blocks is properly highlighted\n        setTimeout(() => {\n            hljs.highlightAll();\n        }, 500)\n    }, [parsedContent]);\n\n    return (\n        <>\n        <Grid container spacing={2} direction={width <= 900 ? \"column-reverse\" : \"row\"}>\n            {\n                // Show a loader while it is loading\n                isLoading ?\n                <>\n                <Grid item xs={12} md={9}>\n                    <Skeleton variant=\"rounded\" height={100} />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Skeleton variant=\"rounded\" height={100} />\n                </Grid>  \n                </> \n                :\n                // Else check for errors\n                error ? \n                <Grid item xs={12}><Error message={errorMessage} /></Grid>\n                :\n                // Data is found\n                <>\n                {/* Main content */}\n                <Grid item xs={12} md={9}>\n                    <AppCard sx={{p: 2}}>\n                        {/* Title */}\n                        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                            <AccountTreeIcon/>\n                            <Typography variant=\"h4\" sx={{ml: 1}}>{data?.name}</Typography>\n                        </Box>\n                        <Divider sx={{my: 1}} />\n\n                        {/* Content */}\n                        <Box p={1}>\n                            {parsedContent}\n                        </Box>\n\n                        <Divider sx={{my: 1}} />\n                        <Box>\n                            <Button\n                                startIcon={<ArrowBackIcon/>}\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={goBack}\n                            >Go back</Button>\n                        </Box>\n                    </AppCard>\n                </Grid>\n\n                {/* Extra content */}\n                <Grid item xs={12} md={3}>\n                    <Box sx={{\n                        width: \"100%\",\n                        p: 2,\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        flexDirection: \"column\"\n                    }}>\n                        <img src={data?.imageURL} style={{objectFit: \"contain\", width: \"100%\", maxHeight: \"300px\", borderRadius: \"8px\"}} />\n                        <Typography sx={{mt: 1, fontSize: 12}} variant=\"body2\" color=\"GrayText\">{data?.short_description}</Typography>\n                    </Box>\n                </Grid>\n                </>\n            }\n        </Grid>\n            \n        </>\n    )\n};\n\nexport default ViewProject;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');\nexports.default = _default;"],"names":["props","message","APP_THEME","useTheme","_jsxs","Alert","severity","variant","sx","boxShadow","shadows","children","_jsx","AlertTitle","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","data","setData","_useState9","_useState10","parsedContent","setParsedContent","_useState11","window","innerWidth","_useState12","width","setWidth","dataAPI","useLoaderData","init","undefined","useEffect","updateWidth","addEventListener","removeEventListener","navigate","useNavigate","response","then","json","status","item","HTMLReactParser","marked","content","catch","e","finally","setTimeout","hljs","_Fragment","Grid","container","spacing","direction","xs","md","Skeleton","height","Error","AppCard","p","Box","display","flexDirection","alignItems","justifyContent","AccountTreeIcon","Typography","ml","name","Divider","my","Button","startIcon","ArrowBackIcon","color","onClick","src","imageURL","style","objectFit","maxHeight","borderRadius","mt","fontSize","short_description","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}