{"version":3,"file":"static/js/240.d53eacca.chunk.js","mappings":"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","sources":["components/Error/index.tsx","pages/projects/ViewProject/index.tsx","../node_modules/@mui/icons-material/AccountTree.js"],"sourcesContent":["import React from 'react';\r\n// @mui components\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport useTheme from '@mui/material/styles/useTheme';\r\n\r\ninterface ErrorProps {\r\n    message?: string;\r\n}\r\n\r\nconst Error: React.FC<ErrorProps> = (props: ErrorProps) => {\r\n    /* \r\n    A simple abstract component to show error throughout the app\r\n    */\r\n    const {message} = props;\r\n    const APP_THEME = useTheme();\r\n\r\n    return (\r\n        <Alert severity='error' variant=\"standard\" sx={{boxShadow: APP_THEME.shadows[\"1\"]}}>\r\n            <AlertTitle>Error</AlertTitle>\r\n                {message}\r\n        </Alert>\r\n    )\r\n};\r\n\r\nexport default Error;","import React, {useEffect, useState} from 'react';\r\nimport {useNavigate, useLoaderData} from 'react-router-dom';\r\n// @mui components\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n// @mui icons\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n// Types\r\nimport {ViewProjectAPIResponse} from '../types';\r\n// Other components\r\nimport AppCard from '../../home/components/AppCard';\r\nimport Error from '../../../components/Error';\r\n// MD parser and html react parser\r\nimport {marked} from 'marked';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport hljs from 'highlight.js';\r\n\r\nconst ViewProject: React.FC = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<boolean>(false);\r\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n    const [data, setData] = useState<ViewProjectAPIResponse[\"item\"]>();\r\n    const [parsedContent, setParsedContent] = useState<ReturnType<typeof HTMLReactParser>>();\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    // Data api from the loader\r\n    const dataAPI = useLoaderData() as {response: Promise<Response>};\r\n\r\n    // Clear data whenever the component is mounted or unmounted\r\n    const init = () => {\r\n        setIsLoading(true); setError(false); setErrorMessage(\"\");\r\n        setData(undefined); setParsedContent(undefined);\r\n    }\r\n\r\n    // When the component is mounted\r\n    // Attach an eventlistener to update the width whenever the width of the window changes\r\n    // removeEventlistener on component unmount\r\n    useEffect(() => {\r\n        const updateWidth = () => {\r\n            setWidth(window.innerWidth);\r\n        };\r\n        window.addEventListener(\"resize\", updateWidth);\r\n\r\n        // Destructor\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateWidth);\r\n        }\r\n    }, []);\r\n\r\n    // Router dom\r\n    const navigate = useNavigate();\r\n\r\n    // Navigate to prev page\r\n    const goBack = () => {\r\n        navigate(\"/projects/\");\r\n    }\r\n\r\n    // Use the dataAPI from the loader to update data\r\n    useEffect(() => {\r\n        // Initialize states\r\n        init();\r\n\r\n        // Fetch\r\n        dataAPI.response\r\n        .then((response) => response.json())\r\n        .then((response: ViewProjectAPIResponse) => {\r\n            if (response.status === \"OK\") {\r\n                setData(response.item);\r\n                setError(false); setErrorMessage(\"\");\r\n                setParsedContent(HTMLReactParser(marked(response.item.content)));\r\n            } else {\r\n                // Else, NOT FOUND\r\n                throw 404;\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            // An error occured\r\n            setError(true);\r\n            setErrorMessage(e === 404 ? \"Not found.\" : \"Sorry, an unknown error occured.\");\r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false);\r\n        })\r\n\r\n        // Destructor to delete all the items in context\r\n        return () => init();\r\n\r\n    }, [dataAPI]);\r\n\r\n    useEffect(() => {\r\n        // Highlight after 1000ms to ensure all code blocks is properly highlighted\r\n        setTimeout(() => {\r\n            hljs.highlightAll();\r\n        }, 500)\r\n    }, [parsedContent]);\r\n\r\n    return (\r\n        <>\r\n        <Grid container spacing={2} direction={width <= 900 ? \"column-reverse\" : \"row\"}>\r\n            {\r\n                // Show a loader while it is loading\r\n                isLoading ?\r\n                <>\r\n                <Grid item xs={12} md={9}>\r\n                    <Skeleton variant=\"rounded\" height={100} />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <Skeleton variant=\"rounded\" height={100} />\r\n                </Grid>  \r\n                </> \r\n                :\r\n                // Else check for errors\r\n                error ? \r\n                <Grid item xs={12}><Error message={errorMessage} /></Grid>\r\n                :\r\n                // Data is found\r\n                <>\r\n                {/* Main content */}\r\n                <Grid item xs={12} md={9}>\r\n                    <AppCard sx={{p: 2}}>\r\n                        {/* Title */}\r\n                        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\">\r\n                            <AccountTreeIcon/>\r\n                            <Typography variant=\"h4\" sx={{ml: 1}}>{data?.name}</Typography>\r\n                        </Box>\r\n                        <Divider sx={{my: 1}} />\r\n\r\n                        {/* Content */}\r\n                        <Box p={1}>\r\n                            {parsedContent}\r\n                        </Box>\r\n\r\n                        <Divider sx={{my: 1}} />\r\n                        <Box>\r\n                            <Button\r\n                                startIcon={<ArrowBackIcon/>}\r\n                                variant=\"contained\"\r\n                                color=\"error\"\r\n                                onClick={goBack}\r\n                            >Go back</Button>\r\n                        </Box>\r\n                    </AppCard>\r\n                </Grid>\r\n\r\n                {/* Extra content */}\r\n                <Grid item xs={12} md={3}>\r\n                    <Box sx={{\r\n                        width: \"100%\",\r\n                        p: 2,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\"\r\n                    }}>\r\n                        <img src={data?.imageURL} style={{objectFit: \"contain\", width: \"100%\", maxHeight: \"300px\", borderRadius: \"8px\"}} />\r\n                        <Typography sx={{mt: 1, fontSize: 12}} variant=\"body2\" color=\"GrayText\">{data?.short_description}</Typography>\r\n                    </Box>\r\n                </Grid>\r\n                </>\r\n            }\r\n        </Grid>\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default ViewProject;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');\nexports.default = _default;"],"names":["props","message","APP_THEME","useTheme","severity","variant","sx","boxShadow","shadows","useState","isLoading","setIsLoading","error","setError","errorMessage","setErrorMessage","data","setData","parsedContent","setParsedContent","window","innerWidth","width","setWidth","dataAPI","useLoaderData","init","undefined","useEffect","updateWidth","addEventListener","removeEventListener","navigate","useNavigate","response","then","json","status","item","HTMLReactParser","marked","content","catch","e","finally","setTimeout","hljs","container","spacing","direction","xs","md","height","p","display","flexDirection","alignItems","justifyContent","ml","name","my","startIcon","color","onClick","src","imageURL","style","objectFit","maxHeight","borderRadius","mt","fontSize","short_description","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}