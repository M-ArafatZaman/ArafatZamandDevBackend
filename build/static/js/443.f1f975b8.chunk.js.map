{"version":3,"file":"static/js/443.f1f975b8.chunk.js","mappings":"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","sources":["components/Error/index.tsx","pages/portfolio/PortfolioItems/PortfolioItemGrid.tsx","pages/portfolio/PortfolioItems/index.tsx","pages/portfolio/reducer.ts","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["import React from 'react';\n// @mui components\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport useTheme from '@mui/material/styles/useTheme';\n\ninterface ErrorProps {\n    message?: string;\n}\n\nconst Error: React.FC<ErrorProps> = (props: ErrorProps) => {\n    /* \n    A simple abstract component to show error throughout the app\n    */\n    const {message} = props;\n    const APP_THEME = useTheme();\n\n    return (\n        <Alert severity='error' variant=\"standard\" sx={{boxShadow: APP_THEME.shadows[\"1\"]}}>\n            <AlertTitle>Error</AlertTitle>\n                {message}\n        </Alert>\n    )\n};\n\nexport default Error;","import React from 'react';\nimport {useNavigate} from 'react-router-dom';\n// @mui components\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport {SxProps} from '@mui/material/styles';\n// Other components\nimport AppCard from '../../home/components/AppCard';\nimport { ElementInViewport } from '../../../utils';\n\n/* Each portfolio item - They are each rendered in a grid container  */\ninterface PortfolioItemGridProps {\n    name: string;\n    short_description: string;\n    image: string;\n    tags: string[];\n    slug: string;\n    index: number;\n};\n\nconst ANIMATION_CLASSES = [\"fadeInLeft\", \"fadeInUp\", \"fadeInDown\", \"fadeInRight\"]\n\nconst PortfolioItemGrid: React.FC<PortfolioItemGridProps> = (props: PortfolioItemGridProps) => {\n    const {name, short_description, image, slug, index} = props;\n    const navigate = useNavigate();\n\n    // On hover style\n    const onHoverStyle: SxProps = {\n        transition: \"all 300ms linear\",\n        \"&:hover\": {\n            transform: \"scale(1.03)\"\n        },\n        // Style for the appcard\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\"\n    };\n\n    return (\n        <Grid item xs={12} md={3}>\n            <ElementInViewport sx={{height: \"100%\"}} animation={ANIMATION_CLASSES[index % ANIMATION_CLASSES.length]}>\n                <AppCard sx={onHoverStyle}>\n                    {/* Title */}\n                    <Box sx={{p:2, pb: 1}}>\n                        <Typography variant=\"h5\">{name}</Typography>\n                        {/*tags.map((str, i) => <Chip label={str} size=\"small\" color=\"info\" sx={{mr: 1}} key={i}/>)*/}\n                    </Box>\n\n                    {/* Image */}\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{position: \"relative\"}}>\n                        <img src={image} style={{objectFit: \"contain\", width: \"100%\"}}/>\n                        {/* Overlay */}\n                        <Box sx={{\n                            position: \"absolute\",\n                            top: 0, bottom: 0, left: 0, right: 0,\n                            background: \"linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,1))\"\n                        }}/>\n                    </Box>\n\n                    {/* Content */}\n                    <Box sx={{p: 2}} flexGrow={1}>\n                        <Typography variant=\"body2\">{short_description}</Typography>\n                    </Box>\n\n                    {/* Button */}\n                    <Box sx={{p: 2, backgroundColor: \"rgba(0,0,0,.1)\"}}>\n                        <Button color=\"info\" onClick={() => {navigate(`/portfolio/${slug}`)}}>View</Button>\n                    </Box>\n                </AppCard>\n            </ElementInViewport>\n        </Grid>\n    )\n};\n\nexport default PortfolioItemGrid;\nexport type {PortfolioItemGridProps};","import React, {useContext} from 'react';\n// @mui components\nimport Grid from '@mui/material/Grid';\nimport Skeleton from '@mui/material/Skeleton';\n// Components\nimport PortfolioItemGrid from './PortfolioItemGrid';\nimport Error from '../../../components/Error';\n// Context\nimport {PortfolioContext} from '../reducer';\n\nconst PortfolioItems: React.FC = () => {\n    const context = useContext(PortfolioContext);\n\n    return (\n        <Grid container justifyContent=\"center\" spacing={2}>\n            {\n            // While it is loading, show a loading\n            context.isLoading ? \n            [1,2,3,4].map((i) => (\n                <Grid key={i} item xs={12} md={3}>\n                    <Skeleton\n                        variant=\"rounded\"\n                        height={100}\n                    />\n                </Grid>\n            ))\n            :\n            // If it is not loading, check for error\n            context.error ?\n            <Grid item p={2} xs={12}>\n                <Error message={context.errorMessage} />\n            </Grid>\n            :\n            // Else everything else is fine\n            context.items.map((portfolio, i) => (\n                <PortfolioItemGrid\n                    index={i}\n                    key={i}\n                    name={portfolio.name}\n                    short_description={portfolio.short_description}\n                    image={portfolio.imageURL}\n                    tags={portfolio.tags}\n                    slug={portfolio.slug}\n                />\n            ))}\n        </Grid>\n    )\n};\n\nexport default PortfolioItems;","import {createContext} from 'react';\nimport {PortfolioItems} from './types';\n\nexport interface PortfolioContextType {\n    isLoading: boolean;\n    items: PortfolioItems[];\n    error: boolean;\n    errorMessage: string;\n}\n\nexport interface PortfolioReducerActionType {\n    type: string;\n    payload?: Partial<PortfolioContextType>;\n}\n\nexport const INITIALIZE = \"INITIALIZE\";\nexport const UPDATE_ITEMS = \"UPDATE_ITEMS\";\nexport const UPDATE_IS_LOADING = \"UPDATE_IS_LOADING\";\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\nexport const ERROR = \"ERROR\";\nexport const PortfolioContext = createContext<PortfolioContextType>({} as PortfolioContextType);\n\nexport const PortfolioReducer = (tasks: PortfolioContextType, action: PortfolioReducerActionType): PortfolioContextType  => {\n    switch (action.type) {\n        case UPDATE_ITEMS: {\n            return {\n                isLoading: false,\n                items: action.payload?.items as PortfolioItems[],\n                error: false,\n                errorMessage: \"\"\n            };\n        };\n        case UPDATE_IS_LOADING: {\n            return {\n                ...tasks,\n                isLoading: action.payload?.isLoading as boolean\n            };\n        };\n        case INITIALIZE:\n        case DELETE_ITEMS: {\n            return {\n                isLoading: true,\n                items: [],\n                error: false,\n                errorMessage: \"\"\n            }\n        };\n        case ERROR:\n            return {\n                ...tasks,\n                error: true,\n                errorMessage: action.payload?.errorMessage || \"Sorry, an unknown error occured!\"\n            }\n        default: {\n            return {...tasks}\n        };\n    }\n};\n\nexport const PORTFOLIO_INITIAL_STATE: PortfolioContextType = {\n    isLoading: true,\n    items: [],\n    error: false,\n    errorMessage: \"\"\n};\n\n","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["props","message","APP_THEME","useTheme","_jsxs","Alert","severity","variant","sx","boxShadow","shadows","children","_jsx","AlertTitle","ANIMATION_CLASSES","name","short_description","image","slug","index","navigate","useNavigate","Grid","item","xs","md","ElementInViewport","height","animation","length","AppCard","transition","transform","display","flexDirection","Box","p","pb","Typography","justifyContent","alignItems","position","src","style","objectFit","width","top","bottom","left","right","background","flexGrow","backgroundColor","Button","color","onClick","concat","context","useContext","PortfolioContext","container","spacing","isLoading","map","i","Skeleton","error","Error","errorMessage","items","portfolio","PortfolioItemGrid","imageURL","tags","INITIALIZE","UPDATE_ITEMS","UPDATE_IS_LOADING","DELETE_ITEMS","ERROR","createContext","PortfolioReducer","tasks","action","_action$payload3","type","_action$payload","payload","_action$payload2","_objectSpread","PORTFOLIO_INITIAL_STATE","getUnit","input","String","match","toUnitless","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","waveKeyframe","_templateObject2","SkeletonRoot","styled","overridesResolver","styles","ownerState","root","hasChildren","withChildren","fitContent","heightAuto","_ref","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","vars","palette","bg","alpha","text","primary","mode","marginTop","marginBottom","transformOrigin","Math","round","content","visibility","maxWidth","_ref2","css","_templateObject3","_ref3","_templateObject4","hover","React","inProps","ref","useThemeProps","_props$animation","className","_props$component","component","_props$variant","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}