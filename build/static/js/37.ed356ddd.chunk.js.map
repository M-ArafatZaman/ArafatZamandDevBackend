{"version":3,"file":"static/js/37.ed356ddd.chunk.js","mappings":"6JAEA,IAAMA,EAAqB,8BACrBC,EAAoB,6B,sJC0G1B,UAlF4B,WAExB,OAA6BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAiBC,EAAAA,IAAyB,eAA3EC,EAAQ,KAAEC,EAAQ,KA+DzB,OA5DAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OA8C1B,OA3CAJ,EAAS,CAACK,KAAMC,EAAAA,KAGhBC,MAAM,GAAD,OAAIC,EAAAA,GAAI,OAAGd,EAAAA,IAAsB,CAClCe,OAAQ,MACRC,KAAM,OACNN,OAAQA,IAEXO,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACC,GACqB,OAApBA,EAASE,OAETd,EAAS,CACLK,KAAMU,EAAAA,EACNC,QAAS,CACLC,MAAOL,EAASK,SAKxBjB,EAAS,CACLK,KAAMa,EAAAA,GACNF,QAAS,CAACG,aAAc,4CAGpC,IACCC,OAAM,WAEHpB,EAAS,CACLK,KAAMa,EAAAA,GACNF,QAAS,CAACG,aAAc,4CAEhC,IACCE,SAAQ,WACLrB,EAAS,CACLK,KAAMiB,EAAAA,GACNN,QAAS,CACLO,WAAW,IAGvB,IAGO,WACHvB,EAAS,CACLK,KAAMmB,EAAAA,GACNR,QAAS,CAAC,IAGdd,EAAWuB,OACf,CAEJ,GAAG,KAGC,UAAC,IAAS,CAACC,GAAI,CAACC,GAAI,GAAG,WAEnB,UAAC,IAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQ,WAC3D,SAAC,IAAY,CAACC,SAAS,QAAQL,GAAI,CAACM,GAAI,MACxC,SAAC,IAAU,CAACC,QAAQ,KAAI,SAAC,iBAE7B,SAAC,IAAO,CAACP,GAAI,CAACQ,GAAI,EAAGC,GAAI,MAGzB,SAAC,cAAwB,CAACC,MAAOrC,EAAS,UACtC,SAAC,KAAM,QAIvB,C,uPCjGaD,EAAgD,CACzDyB,WAAW,EACXN,MAAO,GACPoB,OAAO,EACPlB,aAAc,IAGLmB,GAAkBC,EAAAA,EAAAA,eAAmCzC,GAGrDQ,EAAa,aACbS,EAAe,eACfO,EAAoB,oBACpBE,EAAe,eACfN,EAAQ,QASRrB,EAAkB,WAAyF,IAAxF2C,EAAM,UAAD,6CAAC1C,EAA0B2C,EAA6B,uCACzF,OAAQA,EAAOpC,MACX,KAAKU,EAAe,IAAD,EACf,OAAO,kBACAyB,GAAK,IACRH,OAAO,EACPpB,MAAqB,QAAhB,EAAEwB,EAAOzB,eAAO,aAAd,EAAgBC,QAG/B,KAAKK,EAAoB,IAAD,EACpB,OAAO,kBACAkB,GAAK,IACRjB,UAAyB,QAAhB,EAAEkB,EAAOzB,eAAO,aAAd,EAAgBO,YAGnC,KAAKjB,EACL,KAAKkB,EACD,MAAO,CACHD,WAAW,EACXN,MAAO,GACPoB,OAAO,EACPlB,aAAc,IAGtB,KAAKD,EAAQ,IAAD,EACR,OAAO,kBACAsB,GAAK,IACRH,OAAO,EACPlB,cAA4B,QAAd,EAAAsB,EAAOzB,eAAO,aAAd,EAAgBG,eAAgB,8BAGtD,QACI,OAAO,UAAIqB,GAGvB,C","sources":["pages/projects/ENDPOINT.ts","pages/projects/index.tsx","pages/projects/reducer.ts"],"sourcesContent":["import {BASE} from '../../config';\r\n\r\nconst GET_PROJECTS_ITEMS = \"/projects/api/get_projects/\";\r\nconst VIEW_PROJECT_ITEM = \"/projects/api/view_project/\";\r\n\r\nexport {BASE, GET_PROJECTS_ITEMS, VIEW_PROJECT_ITEM};","import React, {useEffect, useReducer} from 'react';\r\nimport {Outlet} from 'react-router-dom';\r\n// @mui components\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\n// @mui icons\r\nimport TerminalIcon from '@mui/icons-material/Terminal';\r\n// @types\r\nimport {GetProjectsAPIResponse} from './types';\r\n// Endpoints\r\nimport {BASE, GET_PROJECTS_ITEMS} from './ENDPOINT';\r\n// projects Context\r\nimport { \r\n    ProjectsContext,\r\n    ProjectsReducer,\r\n    INITIAL_PROJECTS_CONTEXT,\r\n    // Action types\r\n    UPDATE_ITEMS,\r\n    UPDATE_IS_LOADING,\r\n    DELETE_ITEMS,\r\n    ERROR,\r\n    INITIALIZE\r\n} from './reducer';\r\n\r\n/* The portfolio page */\r\nconst Portfolio: React.FC = () => {\r\n\r\n    const [pContext, dispatch] = useReducer(ProjectsReducer, INITIAL_PROJECTS_CONTEXT);\r\n\r\n    // Fetch data from API endpoint\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n        const signal = controller.signal;\r\n\r\n        // Initialize loading\r\n        dispatch({type: INITIALIZE})\r\n\r\n        // Fetch\r\n        fetch(`${BASE}${GET_PROJECTS_ITEMS}`, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            signal: signal\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response: GetProjectsAPIResponse) => {\r\n            if (response.status === \"OK\") {\r\n                //setItems(response.items);\r\n                dispatch({\r\n                    type: UPDATE_ITEMS,\r\n                    payload: {\r\n                        items: response.items\r\n                    }\r\n                })\r\n            } else {\r\n                // An error occured\r\n                dispatch({\r\n                    type: ERROR,\r\n                    payload: {errorMessage: \"Sorry, an unknown server error occured!\"}\r\n                })\r\n            }\r\n        })\r\n        .catch(() => {\r\n            // Couldnt connect to the server\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: {errorMessage: \"Sorry, an unknown server error occured!\"}\r\n            })\r\n        })\r\n        .finally(() => {\r\n            dispatch({\r\n                type: UPDATE_IS_LOADING,\r\n                payload: {\r\n                    isLoading: false\r\n                }\r\n            })\r\n        })\r\n\r\n        // Destructor to delete all the items in context\r\n        return () => {\r\n            dispatch({\r\n                type: DELETE_ITEMS,\r\n                payload: {}\r\n            })\r\n            // Abort fetch when the component is unmounted\r\n            controller.abort();\r\n        }\r\n\r\n    }, []);\r\n    \r\n    return (\r\n        <Container sx={{py: 2}}>\r\n            {/* Header */}\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <TerminalIcon fontSize=\"large\" sx={{mr: 1}}/>\r\n                <Typography variant=\"h4\">Projects</Typography>\r\n            </Box>\r\n            <Divider sx={{mt: 1, mb: 2}}/>\r\n\r\n            {/* Portfolio cards */}\r\n            <ProjectsContext.Provider value={pContext}>\r\n                <Outlet/>\r\n            </ProjectsContext.Provider>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Portfolio;","import {createContext} from 'react';\r\nimport {ProjectItems} from './types';\r\n\r\nexport interface ProjectsContextType {\r\n    isLoading: boolean;\r\n    items: ProjectItems[];\r\n    error: boolean;\r\n    errorMessage: string;\r\n};\r\n\r\nexport const INITIAL_PROJECTS_CONTEXT: ProjectsContextType = {\r\n    isLoading: true,\r\n    items: [],\r\n    error: false,\r\n    errorMessage: \"\",\r\n};\r\n\r\nexport const ProjectsContext = createContext<ProjectsContextType>(INITIAL_PROJECTS_CONTEXT);\r\n\r\n// Actions\r\nexport const INITIALIZE = \"INITIALIZE\";\r\nexport const UPDATE_ITEMS = \"UPDATE_ITEMS\";\r\nexport const UPDATE_IS_LOADING = \"UPDATE_IS_LOADING\";\r\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\r\nexport const ERROR = \"ERROR\";\r\n\r\n// Action dispatch type\r\nexport interface ProjectsContextAction {\r\n    type: \"UPDATE_ITEMS\" | \"UPDATE_IS_LOADING\" | \"DELETE_ITEMS\" | \"ERROR\" | \"INITIALIZE\";\r\n    payload?: Partial<ProjectsContextType>;\r\n};\r\n\r\n// Reducer\r\nexport const ProjectsReducer = (state=INITIAL_PROJECTS_CONTEXT, action: ProjectsContextAction): ProjectsContextType => {\r\n    switch (action.type) {\r\n        case UPDATE_ITEMS: {\r\n            return {\r\n                ...state,\r\n                error: false,\r\n                items: action.payload?.items as ProjectsContextType[\"items\"]\r\n            }\r\n        };\r\n        case UPDATE_IS_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload?.isLoading as ProjectsContextType[\"isLoading\"]\r\n            }\r\n        };\r\n        case INITIALIZE:\r\n        case DELETE_ITEMS: {\r\n            return {\r\n                isLoading: true,\r\n                items: [],\r\n                error: false,\r\n                errorMessage: \"\"\r\n            }\r\n        };\r\n        case ERROR: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                errorMessage: action.payload?.errorMessage || \"An unknown error occured.\"\r\n            }\r\n        };\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};"],"names":["GET_PROJECTS_ITEMS","VIEW_PROJECT_ITEM","useReducer","ProjectsReducer","INITIAL_PROJECTS_CONTEXT","pContext","dispatch","useEffect","controller","AbortController","signal","type","INITIALIZE","fetch","BASE","method","mode","then","response","json","status","UPDATE_ITEMS","payload","items","ERROR","errorMessage","catch","finally","UPDATE_IS_LOADING","isLoading","DELETE_ITEMS","abort","sx","py","display","alignItems","justifyContent","fontSize","mr","variant","mt","mb","value","error","ProjectsContext","createContext","state","action"],"sourceRoot":""}