{"version":3,"file":"static/js/240.1607f591.chunk.js","mappings":"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","sources":["components/Error/index.tsx","config.ts","pages/home/components/AppCard.tsx","pages/projects/ENDPOINT.ts","pages/projects/ViewProject/index.tsx","../node_modules/@mui/icons-material/AccountTree.js"],"sourcesContent":["import React from 'react';\r\n// @mui components\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport useTheme from '@mui/material/styles/useTheme';\r\n\r\ninterface ErrorProps {\r\n    message?: string;\r\n}\r\n\r\nconst Error: React.FC<ErrorProps> = (props: ErrorProps) => {\r\n    /* \r\n    A simple abstract component to show error throughout the app\r\n    */\r\n    const {message} = props;\r\n    const APP_THEME = useTheme();\r\n\r\n    return (\r\n        <Alert severity='error' variant=\"standard\" sx={{boxShadow: APP_THEME.shadows[\"1\"]}}>\r\n            <AlertTitle>Error</AlertTitle>\r\n                {message}\r\n        </Alert>\r\n    )\r\n};\r\n\r\nexport default Error;","const BASE = process.env.NODE_ENV === \"development\" ? \"http://localhost:8000/\" : \"https://arafatzaman.pythonanywhere.com/\"\r\n\r\nexport {BASE};","import React from 'react';\r\n// @mui Components\r\nimport Box from '@mui/material/Box';\r\nimport {SxProps} from '@mui/material/styles';\r\nimport {APP_THEME} from '../../../appTheme';\r\n\r\ninterface AppCardProps {\r\n    children: JSX.Element | JSX.Element[];\r\n    sx?: SxProps \r\n};\r\n\r\n/**\r\n * Custom app card \r\n * @param props A sx prop similar to @mui components and a children(s)\r\n * @returns \r\n */\r\nconst AppCard: React.FC<AppCardProps> = (props: AppCardProps) => {\r\n    const {children, sx} = props;\r\n\r\n    const ContainerStyles: SxProps = {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"12px\",\r\n        boxShadow: APP_THEME.shadows[3],\r\n        position: \"relative\",\r\n        overflow: \"hidden\"\r\n    };\r\n\r\n    return (\r\n        <Box sx={[ContainerStyles, ...(Array.isArray(sx) ? sx : [sx])]}>\r\n            {children}\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default AppCard;","import {BASE} from '../../config';\r\n\r\nconst GET_PROJECTS_ITEMS = \"/projects/api/get_projects/\";\r\nconst VIEW_PROJECT_ITEM = \"/projects/api/view_project/\";\r\n\r\nexport {BASE, GET_PROJECTS_ITEMS, VIEW_PROJECT_ITEM};","import React, {useEffect, useState} from 'react';\r\nimport {useParams, useLocation, useNavigate} from 'react-router-dom';\r\n// @mui components\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n// @mui icons\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n// Endpoints\r\nimport {BASE, VIEW_PROJECT_ITEM} from '../ENDPOINT';\r\n// Types\r\nimport {ViewProjectAPIResponse} from '../types';\r\n// Other components\r\nimport AppCard from '../../home/components/AppCard';\r\nimport Error from '../../../components/Error';\r\n// MD parser and html react parser\r\nimport {marked} from 'marked';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport hljs from 'highlight.js';\r\n\r\nconst ViewProject: React.FC = () => {\r\n\r\n    const {slug} = useParams<{slug: string}>();\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [found, setFound] = useState<boolean>(false);\r\n    const [error, setError] = useState<{status: boolean, message: string}>({status: false, message: \"\"});\r\n    const [data, setData] = useState<ViewProjectAPIResponse[\"item\"]>();\r\n    const [parsedContent, setParsedContent] = useState<ReturnType<typeof HTMLReactParser>>();\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n\r\n    // When the component is mounted\r\n    // Attach an eventlistener to update the width whenever the width of the window changes\r\n    // removeEventlistener on component unmount\r\n    useEffect(() => {\r\n        const updateWidth = () => {\r\n            setWidth(window.innerWidth);\r\n        };\r\n        window.addEventListener(\"resize\", updateWidth);\r\n\r\n        // Destructor\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateWidth);\r\n        }\r\n    }, []);\r\n\r\n    // Router dom\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    // Navigate to prev page\r\n    const goBack = () => {\r\n        navigate(\"/projects/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController();\r\n        const signal = controller.signal;\r\n\r\n        // Initialize loading\r\n        setIsLoading(true); \r\n        setFound(false);\r\n        setError({status: false, message: \"\"}); // Reset any error messages\r\n\r\n        // Fetch\r\n        fetch(`${BASE}${VIEW_PROJECT_ITEM}${slug}/`, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            signal: signal\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response: ViewProjectAPIResponse) => {\r\n            if (response.status === \"OK\") {\r\n                setData(response.item);\r\n                setFound(true);\r\n                setError({status: false, message: \"\"});\r\n                setParsedContent(HTMLReactParser(marked(response.item.content)));\r\n            } else {\r\n                // Else, NOT FOUND\r\n                setFound(false);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            // An error occured\r\n            setError({status: true, message: \"Sorry, an unknown error occured.\"});\r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false);\r\n        })\r\n\r\n        // Destructor to delete all the items in context\r\n        return () => {\r\n            // Delete all items\r\n            setParsedContent(undefined);\r\n            setData(undefined);\r\n            setFound(false);\r\n            setIsLoading(true);\r\n            setError({status: false, message: \"\"}); \r\n            // Abort fetch when the component is unmounted\r\n            controller.abort();\r\n        }\r\n\r\n    }, [location.pathname]);\r\n\r\n    useEffect(() => {\r\n        // Highlight after 1000ms to ensure all code blocks is properly highlighted\r\n        setTimeout(() => {\r\n            hljs.highlightAll();\r\n        }, 500)\r\n    }, [parsedContent]);\r\n\r\n    return (\r\n        <>\r\n        <Grid container spacing={2} direction={width <= 900 ? \"column-reverse\" : \"row\"}>\r\n            {\r\n                // Show a loader while it is loading\r\n                isLoading ?\r\n                <>\r\n                <Grid item xs={12} md={9}>\r\n                    <Skeleton variant=\"rounded\" height={100} />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <Skeleton variant=\"rounded\" height={100} />\r\n                </Grid>  \r\n                </> \r\n                :\r\n                // Else check for errors\r\n                error.status ? \r\n                <Grid item xs={12}><Error message={error.message} /></Grid>\r\n                :\r\n                // Else check if no data is found\r\n                !found ?\r\n                <Grid item xs={12}><Error message=\"Not found.\" /></Grid>\r\n                :\r\n                // Data is found\r\n                <>\r\n                {/* Main content */}\r\n                <Grid item xs={12} md={9}>\r\n                    <AppCard sx={{p: 2}}>\r\n                        {/* Title */}\r\n                        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\">\r\n                            <AccountTreeIcon/>\r\n                            <Typography variant=\"h4\" sx={{ml: 1}}>{data?.name}</Typography>\r\n                        </Box>\r\n                        <Divider sx={{my: 1}} />\r\n\r\n                        {/* Content */}\r\n                        <Box p={1}>\r\n                            {parsedContent}\r\n                        </Box>\r\n\r\n                        <Divider sx={{my: 1}} />\r\n                        <Box>\r\n                            <Button\r\n                                startIcon={<ArrowBackIcon/>}\r\n                                variant=\"contained\"\r\n                                color=\"error\"\r\n                                onClick={goBack}\r\n                            >Go back</Button>\r\n                        </Box>\r\n                    </AppCard>\r\n                </Grid>\r\n\r\n                {/* Extra content */}\r\n                <Grid item xs={12} md={3}>\r\n                    <Box sx={{\r\n                        width: \"100%\",\r\n                        p: 2,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\"\r\n                    }}>\r\n                        <img src={data?.imageURL} style={{objectFit: \"contain\", width: \"100%\", maxHeight: \"300px\", borderRadius: \"8px\"}} />\r\n                        <Typography sx={{mt: 1, fontSize: 12}} variant=\"body2\" color=\"GrayText\">{data?.short_description}</Typography>\r\n                    </Box>\r\n                </Grid>\r\n                </>\r\n            }\r\n        </Grid>\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default ViewProject;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');\nexports.default = _default;"],"names":["props","message","APP_THEME","useTheme","severity","variant","sx","boxShadow","shadows","BASE","children","ContainerStyles","backgroundColor","borderRadius","position","overflow","Array","isArray","GET_PROJECTS_ITEMS","VIEW_PROJECT_ITEM","slug","useParams","useState","isLoading","setIsLoading","found","setFound","status","error","setError","data","setData","parsedContent","setParsedContent","window","innerWidth","width","setWidth","useEffect","updateWidth","addEventListener","removeEventListener","location","useLocation","navigate","useNavigate","controller","AbortController","signal","fetch","method","mode","then","response","json","item","HTMLReactParser","marked","content","catch","finally","undefined","abort","pathname","setTimeout","hljs","container","spacing","direction","xs","md","height","p","display","flexDirection","alignItems","justifyContent","ml","name","my","startIcon","color","onClick","src","imageURL","style","objectFit","maxHeight","mt","fontSize","short_description","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}