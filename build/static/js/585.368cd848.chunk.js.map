{"version":3,"file":"static/js/585.368cd848.chunk.js","mappings":"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","sources":["components/Error/index.tsx","pages/home/components/AppCard.tsx","pages/projects/ProjectItems/ProjectItemGrid.tsx","pages/projects/ProjectItems/index.tsx","pages/projects/reducer.ts","../node_modules/@mui/icons-material/AccountTree.js"],"sourcesContent":["import React from 'react';\r\n// @mui components\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport useTheme from '@mui/material/styles/useTheme';\r\n\r\ninterface ErrorProps {\r\n    message?: string;\r\n}\r\n\r\nconst Error: React.FC<ErrorProps> = (props: ErrorProps) => {\r\n    /* \r\n    A simple abstract component to show error throughout the app\r\n    */\r\n    const {message} = props;\r\n    const APP_THEME = useTheme();\r\n\r\n    return (\r\n        <Alert severity='error' variant=\"standard\" sx={{boxShadow: APP_THEME.shadows[\"1\"]}}>\r\n            <AlertTitle>Error</AlertTitle>\r\n                {message}\r\n        </Alert>\r\n    )\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\n// @mui Components\r\nimport Box from '@mui/material/Box';\r\nimport {SxProps} from '@mui/material/styles';\r\nimport {APP_THEME} from '../../../appTheme';\r\n\r\ninterface AppCardProps {\r\n    children: JSX.Element | JSX.Element[];\r\n    sx?: SxProps \r\n};\r\n\r\n/**\r\n * Custom app card \r\n * @param props A sx prop similar to @mui components and a children(s)\r\n * @returns \r\n */\r\nconst AppCard: React.FC<AppCardProps> = (props: AppCardProps) => {\r\n    const {children, sx} = props;\r\n\r\n    const ContainerStyles: SxProps = {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"12px\",\r\n        boxShadow: APP_THEME.shadows[3],\r\n        position: \"relative\",\r\n        overflow: \"hidden\"\r\n    };\r\n\r\n    return (\r\n        <Box sx={[ContainerStyles, ...(Array.isArray(sx) ? sx : [sx])]}>\r\n            {children}\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default AppCard;","import React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n// @mui components\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport {SxProps} from '@mui/material/styles';\r\n// @mui icons\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\n// Other components\r\nimport AppCard from '../../home/components/AppCard';\r\n// Types\r\nimport {ProjectItems} from '../types';\r\n\r\n/* Each projects item - They are each rendered in a grid container  */\r\ninterface PortfolioItemGridProps extends ProjectItems{};\r\n\r\nconst PortfolioItemGrid: React.FC<PortfolioItemGridProps> = (props: PortfolioItemGridProps) => {\r\n    const {name, short_description, slug } = props;\r\n    const navigate = useNavigate();\r\n\r\n    // On hover style\r\n    const onHoverStyle: SxProps = {\r\n        transition: \"all 300ms linear\",\r\n        \"&:hover\": {\r\n            transform: \"scale(1.03)\",\r\n            backgroundColor: \"rgba(0,0,0,.15)\"\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: \"rgba(0,0,0,.45)\"\r\n        },\r\n        // Style for the appcard\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        cursor: \"pointer\"\r\n    };\r\n\r\n    // On click\r\n    const onClick = () => {\r\n        navigate(`/projects/${slug}/`);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} md={3}>\r\n            <Box sx={{height: \"100%\"}} onClick={onClick}>\r\n                <AppCard sx={onHoverStyle}>\r\n                    {/* Title */}\r\n                    <Box sx={{p:2, pb: 1}} display=\"flex\" flexDirection=\"row\" alignItems=\"start\">\r\n                        <AccountTreeIcon sx={{mt: .5}} />\r\n                        <Typography variant=\"h6\" sx={{ml: 1}}><b>{name}</b></Typography>\r\n                    </Box>\r\n\r\n                    {/* Content */}\r\n                    <Box sx={{p: 2}}>\r\n                        <Typography variant=\"body2\">{short_description}</Typography>\r\n                    </Box>\r\n                </AppCard>\r\n\r\n            </Box>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default PortfolioItemGrid;\r\nexport type {PortfolioItemGridProps};","import React, {useContext} from 'react';\r\n// @mui components\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n// Components\r\nimport ProjectItemGrid from './ProjectItemGrid';\r\nimport Error from '../../../components/Error';\r\n// Context\r\nimport {ProjectsContext} from '../reducer';\r\n\r\nconst ProjectItems: React.FC = () => {\r\n    const context = useContext(ProjectsContext);\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" spacing={2}>\r\n            {\r\n            // Content is still loading\r\n            context.isLoading ? \r\n            [1,2,3,4].map((i) => (\r\n                <Grid key={i} item xs={12} md={3}>\r\n                    <Skeleton variant=\"rounded\" height={100} />\r\n                </Grid>\r\n            ))\r\n            :\r\n            // An error occured\r\n            context.error ?\r\n            <Grid item xs={12}>\r\n                <Error message={context.errorMessage} />\r\n            </Grid>\r\n            :\r\n            context.items.map((projects, i) => (\r\n                <ProjectItemGrid\r\n                    key={i}\r\n                    name={projects.name}\r\n                    short_description={projects.short_description}\r\n                    imageURL={projects.imageURL}\r\n                    slug={projects.slug}\r\n                />\r\n            ))}\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default ProjectItems;","import {createContext} from 'react';\r\nimport {ProjectItems} from './types';\r\n\r\nexport interface ProjectsContextType {\r\n    isLoading: boolean;\r\n    items: ProjectItems[];\r\n    error: boolean;\r\n    errorMessage: string;\r\n};\r\n\r\nexport const INITIAL_PROJECTS_CONTEXT: ProjectsContextType = {\r\n    isLoading: true,\r\n    items: [],\r\n    error: false,\r\n    errorMessage: \"\",\r\n};\r\n\r\nexport const ProjectsContext = createContext<ProjectsContextType>(INITIAL_PROJECTS_CONTEXT);\r\n\r\n// Actions\r\nexport const INITIALIZE = \"INITIALIZE\";\r\nexport const UPDATE_ITEMS = \"UPDATE_ITEMS\";\r\nexport const UPDATE_IS_LOADING = \"UPDATE_IS_LOADING\";\r\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\r\nexport const ERROR = \"ERROR\";\r\n\r\n// Action dispatch type\r\nexport interface ProjectsContextAction {\r\n    type: \"UPDATE_ITEMS\" | \"UPDATE_IS_LOADING\" | \"DELETE_ITEMS\" | \"ERROR\" | \"INITIALIZE\";\r\n    payload?: Partial<ProjectsContextType>;\r\n};\r\n\r\n// Reducer\r\nexport const ProjectsReducer = (state=INITIAL_PROJECTS_CONTEXT, action: ProjectsContextAction): ProjectsContextType => {\r\n    switch (action.type) {\r\n        case UPDATE_ITEMS: {\r\n            return {\r\n                ...state,\r\n                error: false,\r\n                items: action.payload?.items as ProjectsContextType[\"items\"]\r\n            }\r\n        };\r\n        case UPDATE_IS_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload?.isLoading as ProjectsContextType[\"isLoading\"]\r\n            }\r\n        };\r\n        case INITIALIZE:\r\n        case DELETE_ITEMS: {\r\n            return {\r\n                isLoading: true,\r\n                items: [],\r\n                error: false,\r\n                errorMessage: \"\"\r\n            }\r\n        };\r\n        case ERROR: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                errorMessage: action.payload?.errorMessage || \"An unknown error occured.\"\r\n            }\r\n        };\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');\nexports.default = _default;"],"names":["props","message","APP_THEME","useTheme","severity","variant","sx","boxShadow","shadows","children","ContainerStyles","backgroundColor","borderRadius","position","overflow","Array","isArray","name","short_description","slug","navigate","useNavigate","Grid","item","xs","md","Box","height","onClick","AppCard","transition","transform","display","flexDirection","cursor","p","pb","alignItems","AccountTree","mt","Typography","ml","context","useContext","ProjectsContext","container","justifyContent","spacing","isLoading","map","i","Skeleton","error","Error","errorMessage","items","projects","ProjectItemGrid","imageURL","INITIAL_PROJECTS_CONTEXT","createContext","INITIALIZE","UPDATE_ITEMS","UPDATE_IS_LOADING","DELETE_ITEMS","ERROR","ProjectsReducer","state","action","type","payload","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}