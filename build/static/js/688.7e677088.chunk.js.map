{"version":3,"file":"static/js/688.7e677088.chunk.js","mappings":"kNAkFA,UAzD4B,WAExB,OAA6BA,EAAAA,EAAAA,YAAWC,EAAAA,GAAkBC,EAAAA,IAAwB,eAA3EC,EAAQ,KAAEC,EAAQ,KACnBC,GAAOC,EAAAA,EAAAA,MAqCb,OAlCAC,EAAAA,EAAAA,YAAU,WAEN,OADAH,EAAS,CAACI,KAAMC,EAAAA,KACT,WACHL,EAAS,CAACI,KAAME,EAAAA,IACpB,CACJ,GAAG,KAGHH,EAAAA,EAAAA,YAAU,WACNF,EAAKM,SACJC,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAC1BF,MAAK,SAACC,GACH,GAAoB,OAAhBA,EAAKE,OAOL,KAAM,sBALNX,EAAS,CACLI,KAAMQ,EAAAA,EACNC,QAAS,CAACC,MAAOL,EAAKK,QAKlC,IACCC,OAAM,WAEHf,EAAS,CACLI,KAAMY,EAAAA,GACNH,QAAS,CAACI,aAAc,qCAEhC,IACCC,SAAQ,WACLlB,EAAS,CAACI,KAAMe,EAAAA,GAAmBN,QAAS,CAACO,WAAW,IAC5D,GACJ,GAAG,CAACnB,KAGA,UAAC,IAAS,CAACoB,GAAI,CAACC,GAAI,GAAG,WAEnB,UAAC,IAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQ,WAC3D,SAAC,IAAQ,CAACC,SAAS,QAAQL,GAAI,CAACM,GAAI,MACpC,SAAC,IAAU,CAACC,QAAQ,KAAI,SAAC,kBAE7B,SAAC,IAAO,CAACP,GAAI,CAACQ,GAAI,EAAGC,GAAI,MAGzB,SAAC,cAAyB,CAACC,MAAOhC,EAAS,UACvC,SAAC,KAAM,QAIvB,C,uPCjEaM,EAAa,aACbO,EAAe,eACfO,EAAoB,oBACpBb,EAAe,eACfU,EAAQ,QACRgB,GAAmBC,EAAAA,EAAAA,eAAoC,CAAC,GAExDpC,EAAmB,SAACqC,EAA6BC,GAA+D,IAAD,EACxH,OAAQA,EAAO/B,MACX,KAAKQ,EAAe,IAAD,EACf,MAAO,CACHQ,WAAW,EACXN,MAAqB,QAAhB,EAAEqB,EAAOtB,eAAO,aAAd,EAAgBC,MACvBsB,OAAO,EACPnB,aAAc,IAGtB,KAAKE,EAAoB,IAAD,EACpB,OAAO,kBACAe,GAAK,IACRd,UAAyB,QAAhB,EAAEe,EAAOtB,eAAO,aAAd,EAAgBO,YAGnC,KAAKf,EACL,KAAKC,EACD,MAAO,CACHc,WAAW,EACXN,MAAO,GACPsB,OAAO,EACPnB,aAAc,IAGtB,KAAKD,EACD,OAAO,kBACAkB,GAAK,IACRE,OAAO,EACPnB,cAA4B,QAAd,EAAAkB,EAAOtB,eAAO,aAAd,EAAgBI,eAAgB,qCAEtD,QACI,OAAO,UAAIiB,GAGvB,EAEapC,EAAgD,CACzDsB,WAAW,EACXN,MAAO,GACPsB,OAAO,EACPnB,aAAc,G","sources":["pages/portfolio/index.tsx","pages/portfolio/reducer.ts"],"sourcesContent":["import React, {useEffect, useReducer} from 'react';\r\nimport {Outlet, useLoaderData} from 'react-router-dom';\r\n// @mui components\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\n// @mui icons\r\nimport WorkIcon from '@mui/icons-material/Work';\r\n// @types\r\nimport {PortfolioAPIResponse} from './types';\r\n// Portfolio Context\r\nimport { \r\n    PortfolioContext,\r\n    PortfolioReducer,\r\n    PORTFOLIO_INITIAL_STATE,\r\n    // Action types\r\n    UPDATE_ITEMS,\r\n    UPDATE_IS_LOADING,\r\n    DELETE_ITEMS,\r\n    ERROR,\r\n    INITIALIZE\r\n} from './reducer';\r\n\r\n/* The portfolio page */\r\nconst Portfolio: React.FC = () => {\r\n\r\n    const [pContext, dispatch] = useReducer(PortfolioReducer, PORTFOLIO_INITIAL_STATE);\r\n    const data = useLoaderData() as {response: Promise<Response>};\r\n\r\n    // Initialize when the component is mounted and delete when the component is unmounted\r\n    useEffect(() => {\r\n        dispatch({type: INITIALIZE});\r\n        return () => {\r\n            dispatch({type: DELETE_ITEMS});\r\n        }\r\n    }, [])\r\n\r\n    // Fetch data from API endpoint\r\n    useEffect(() => {\r\n        data.response\r\n        .then((resp) => resp.json())\r\n        .then((resp: PortfolioAPIResponse) => {\r\n            if (resp.status === \"OK\") {\r\n                // Received all items successfully\r\n                dispatch({\r\n                    type: UPDATE_ITEMS,\r\n                    payload: {items: resp.items}\r\n                })\r\n            } else {\r\n                throw \"Unexpected response\";\r\n            }\r\n        })\r\n        .catch(() => {\r\n            // An error occured\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: {errorMessage: \"Sorry, an unknown error occured.\"}\r\n            })\r\n        })\r\n        .finally(() => {\r\n            dispatch({type: UPDATE_IS_LOADING, payload: {isLoading: false}});\r\n        })\r\n    }, [data]);\r\n    \r\n    return (\r\n        <Container sx={{py: 2}}>\r\n            {/* Header */}\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <WorkIcon fontSize=\"large\" sx={{mr: 1}}/>\r\n                <Typography variant=\"h4\">Portfolio</Typography>\r\n            </Box>\r\n            <Divider sx={{mt: 1, mb: 2}}/>\r\n\r\n            {/* Portfolio cards */}\r\n            <PortfolioContext.Provider value={pContext}>\r\n                <Outlet/>\r\n            </PortfolioContext.Provider>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Portfolio;","import {createContext} from 'react';\r\nimport {PortfolioItems} from './types';\r\n\r\nexport interface PortfolioContextType {\r\n    isLoading: boolean;\r\n    items: PortfolioItems[];\r\n    error: boolean;\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface PortfolioReducerActionType {\r\n    type: string;\r\n    payload?: Partial<PortfolioContextType>;\r\n}\r\n\r\nexport const INITIALIZE = \"INITIALIZE\";\r\nexport const UPDATE_ITEMS = \"UPDATE_ITEMS\";\r\nexport const UPDATE_IS_LOADING = \"UPDATE_IS_LOADING\";\r\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\r\nexport const ERROR = \"ERROR\";\r\nexport const PortfolioContext = createContext<PortfolioContextType>({} as PortfolioContextType);\r\n\r\nexport const PortfolioReducer = (tasks: PortfolioContextType, action: PortfolioReducerActionType): PortfolioContextType  => {\r\n    switch (action.type) {\r\n        case UPDATE_ITEMS: {\r\n            return {\r\n                isLoading: false,\r\n                items: action.payload?.items as PortfolioItems[],\r\n                error: false,\r\n                errorMessage: \"\"\r\n            };\r\n        };\r\n        case UPDATE_IS_LOADING: {\r\n            return {\r\n                ...tasks,\r\n                isLoading: action.payload?.isLoading as boolean\r\n            };\r\n        };\r\n        case INITIALIZE:\r\n        case DELETE_ITEMS: {\r\n            return {\r\n                isLoading: true,\r\n                items: [],\r\n                error: false,\r\n                errorMessage: \"\"\r\n            }\r\n        };\r\n        case ERROR:\r\n            return {\r\n                ...tasks,\r\n                error: true,\r\n                errorMessage: action.payload?.errorMessage || \"Sorry, an unknown error occured!\"\r\n            }\r\n        default: {\r\n            return {...tasks}\r\n        };\r\n    }\r\n};\r\n\r\nexport const PORTFOLIO_INITIAL_STATE: PortfolioContextType = {\r\n    isLoading: true,\r\n    items: [],\r\n    error: false,\r\n    errorMessage: \"\"\r\n};\r\n\r\n"],"names":["useReducer","PortfolioReducer","PORTFOLIO_INITIAL_STATE","pContext","dispatch","data","useLoaderData","useEffect","type","INITIALIZE","DELETE_ITEMS","response","then","resp","json","status","UPDATE_ITEMS","payload","items","catch","ERROR","errorMessage","finally","UPDATE_IS_LOADING","isLoading","sx","py","display","alignItems","justifyContent","fontSize","mr","variant","mt","mb","value","PortfolioContext","createContext","tasks","action","error"],"sourceRoot":""}