{"version":3,"file":"static/js/37.9ab097ea.chunk.js","mappings":"+MAwFA,UA/D4B,WAExB,IAAAA,GAA6BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAiBC,EAAAA,IAAyBC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA3EM,EAAQF,EAAA,GAAEG,EAAQH,EAAA,GACnBI,GAAUC,EAAAA,EAAAA,MA2ChB,OAxCAC,EAAAA,EAAAA,YAAU,WAEN,OADAH,EAAS,CAACI,KAAMC,EAAAA,KACT,kBAAML,EAAS,CAACI,KAAME,EAAAA,IAAe,CAChD,GAAG,KAGHH,EAAAA,EAAAA,YAAU,WAENF,EAAQM,SACPC,MAAK,SAACD,GAAQ,OAAKA,EAASE,MAAM,IAClCD,MAAK,SAACD,GACH,GAAwB,OAApBA,EAASG,OAST,MAAM,IARNV,EAAS,CACLI,KAAMO,EAAAA,EACNC,QAAS,CACLC,MAAON,EAASM,QAOhC,IACCC,OAAM,WAEHd,EAAS,CACLI,KAAMW,EAAAA,GACNH,QAAS,CAACI,aAAc,4CAEhC,IACCC,SAAQ,WACLjB,EAAS,CACLI,KAAMc,EAAAA,GACNN,QAAS,CACLO,WAAW,IAGvB,GACJ,GAAG,CAAClB,KAGAmB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,GAAI,CAACC,GAAI,GAAGC,SAAA,EAEnBJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQJ,SAAA,EAC3DK,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,SAAS,QAAQT,GAAI,CAACU,GAAI,MACxCH,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,QAAQ,KAAIV,SAAC,iBAE7BK,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACb,GAAI,CAACc,GAAI,EAAGC,GAAI,MAGzBR,EAAAA,EAAAA,KAACS,EAAAA,GAAAA,SAAwB,CAACC,MAAOxC,EAASyB,UACtCK,EAAAA,EAAAA,KAACW,EAAAA,GAAM,QAIvB,C,uPC5Ea5C,EAAgD,CACzDuB,WAAW,EACXN,MAAO,GACP4B,OAAO,EACPzB,aAAc,IAGLsB,GAAkBI,EAAAA,EAAAA,eAAmC9C,GAGrDS,EAAa,aACbM,EAAe,eACfO,EAAoB,oBACpBZ,EAAe,eACfS,EAAQ,QASRpB,EAAkB,WAAyF,IAAxFgD,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAChD,EAA0BmD,EAA6BH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzF,OAAQC,EAAO3C,MACX,KAAKO,EAAe,IAADqC,EACf,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACON,GAAK,IACRF,OAAO,EACP5B,MAAqB,QAAhBmC,EAAED,EAAOnC,eAAO,IAAAoC,OAAA,EAAdA,EAAgBnC,QAG/B,KAAKK,EAAoB,IAADgC,EACpB,OAAAD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACON,GAAK,IACRxB,UAAyB,QAAhB+B,EAAEH,EAAOnC,eAAO,IAAAsC,OAAA,EAAdA,EAAgB/B,YAGnC,KAAKd,EACL,KAAKC,EACD,MAAO,CACHa,WAAW,EACXN,MAAO,GACP4B,OAAO,EACPzB,aAAc,IAGtB,KAAKD,EAAQ,IAADoC,EACR,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACON,GAAK,IACRF,OAAO,EACPzB,cAA4B,QAAdmC,EAAAJ,EAAOnC,eAAO,IAAAuC,OAAA,EAAdA,EAAgBnC,eAAgB,8BAGtD,QACI,OAAAiC,EAAAA,EAAAA,GAAA,GAAWN,GAGvB,C","sources":["pages/projects/index.tsx","pages/projects/reducer.ts"],"sourcesContent":["import React, {useEffect, useReducer} from 'react';\nimport {Outlet, useLoaderData} from 'react-router-dom';\n// @mui components\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n// @mui icons\nimport TerminalIcon from '@mui/icons-material/Terminal';\n// @types\nimport {GetProjectsAPIResponse} from './types';\n// projects Context\nimport { \n    ProjectsContext,\n    ProjectsReducer,\n    INITIAL_PROJECTS_CONTEXT,\n    // Action types\n    UPDATE_ITEMS,\n    UPDATE_IS_LOADING,\n    DELETE_ITEMS,\n    ERROR,\n    INITIALIZE\n} from './reducer';\n\n/* The portfolio page */\nconst Portfolio: React.FC = () => {\n\n    const [pContext, dispatch] = useReducer(ProjectsReducer, INITIAL_PROJECTS_CONTEXT);\n    const dataAPI = useLoaderData() as {response: Promise<Response>};\n\n    // Clean reducer every mount and unmount\n    useEffect(() => {\n        dispatch({type: INITIALIZE});\n        return () => dispatch({type: DELETE_ITEMS});\n    }, []);\n\n    // Fetch data from API endpoint\n    useEffect(() => {\n        // Fetch\n        dataAPI.response\n        .then((response) => response.json())\n        .then((response: GetProjectsAPIResponse) => {\n            if (response.status === \"OK\") {\n                dispatch({\n                    type: UPDATE_ITEMS,\n                    payload: {\n                        items: response.items\n                    }\n                })\n            } else {\n                // An error occured\n                throw 404;\n            }\n        })\n        .catch(() => {\n            // Couldnt connect to the server\n            dispatch({\n                type: ERROR,\n                payload: {errorMessage: \"Sorry, an unknown server error occured!\"}\n            })\n        })\n        .finally(() => {\n            dispatch({\n                type: UPDATE_IS_LOADING,\n                payload: {\n                    isLoading: false\n                }\n            })\n        });\n    }, [dataAPI]);\n    \n    return (\n        <Container sx={{py: 2}}>\n            {/* Header */}\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <TerminalIcon fontSize=\"large\" sx={{mr: 1}}/>\n                <Typography variant=\"h4\">Projects</Typography>\n            </Box>\n            <Divider sx={{mt: 1, mb: 2}}/>\n\n            {/* Portfolio cards */}\n            <ProjectsContext.Provider value={pContext}>\n                <Outlet/>\n            </ProjectsContext.Provider>\n        </Container>\n    );\n};\n\nexport default Portfolio;","import {createContext} from 'react';\nimport {ProjectItems} from './types';\n\nexport interface ProjectsContextType {\n    isLoading: boolean;\n    items: ProjectItems[];\n    error: boolean;\n    errorMessage: string;\n};\n\nexport const INITIAL_PROJECTS_CONTEXT: ProjectsContextType = {\n    isLoading: true,\n    items: [],\n    error: false,\n    errorMessage: \"\",\n};\n\nexport const ProjectsContext = createContext<ProjectsContextType>(INITIAL_PROJECTS_CONTEXT);\n\n// Actions\nexport const INITIALIZE = \"INITIALIZE\";\nexport const UPDATE_ITEMS = \"UPDATE_ITEMS\";\nexport const UPDATE_IS_LOADING = \"UPDATE_IS_LOADING\";\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\nexport const ERROR = \"ERROR\";\n\n// Action dispatch type\nexport interface ProjectsContextAction {\n    type: \"UPDATE_ITEMS\" | \"UPDATE_IS_LOADING\" | \"DELETE_ITEMS\" | \"ERROR\" | \"INITIALIZE\";\n    payload?: Partial<ProjectsContextType>;\n};\n\n// Reducer\nexport const ProjectsReducer = (state=INITIAL_PROJECTS_CONTEXT, action: ProjectsContextAction): ProjectsContextType => {\n    switch (action.type) {\n        case UPDATE_ITEMS: {\n            return {\n                ...state,\n                error: false,\n                items: action.payload?.items as ProjectsContextType[\"items\"]\n            }\n        };\n        case UPDATE_IS_LOADING: {\n            return {\n                ...state,\n                isLoading: action.payload?.isLoading as ProjectsContextType[\"isLoading\"]\n            }\n        };\n        case INITIALIZE:\n        case DELETE_ITEMS: {\n            return {\n                isLoading: true,\n                items: [],\n                error: false,\n                errorMessage: \"\"\n            }\n        };\n        case ERROR: {\n            return {\n                ...state,\n                error: true,\n                errorMessage: action.payload?.errorMessage || \"An unknown error occured.\"\n            }\n        };\n        default: {\n            return {...state};\n        }\n    }\n};"],"names":["_useReducer","useReducer","ProjectsReducer","INITIAL_PROJECTS_CONTEXT","_useReducer2","_slicedToArray","pContext","dispatch","dataAPI","useLoaderData","useEffect","type","INITIALIZE","DELETE_ITEMS","response","then","json","status","UPDATE_ITEMS","payload","items","catch","ERROR","errorMessage","finally","UPDATE_IS_LOADING","isLoading","_jsxs","Container","sx","py","children","Box","display","alignItems","justifyContent","_jsx","TerminalIcon","fontSize","mr","Typography","variant","Divider","mt","mb","ProjectsContext","value","Outlet","error","createContext","state","arguments","length","undefined","action","_action$payload","_objectSpread","_action$payload2","_action$payload3"],"sourceRoot":""}