{"version":3,"file":"static/js/37.9ab097ea.chunk.js","mappings":"+MAwFA,UA/D4B,WAExB,OAA6BA,EAAAA,EAAAA,YAAWC,EAAAA,GAAiBC,EAAAA,IAAyB,eAA3EC,EAAQ,KAAEC,EAAQ,KACnBC,GAAUC,EAAAA,EAAAA,MA2ChB,OAxCAC,EAAAA,EAAAA,YAAU,WAEN,OADAH,EAAS,CAACI,KAAMC,EAAAA,KACT,kBAAML,EAAS,CAACI,KAAME,EAAAA,IAAe,CAChD,GAAG,KAGHH,EAAAA,EAAAA,YAAU,WAENF,EAAQM,SACPC,MAAK,SAACD,GAAQ,OAAKA,EAASE,MAAM,IAClCD,MAAK,SAACD,GACH,GAAwB,OAApBA,EAASG,OAST,MAAM,IARNV,EAAS,CACLI,KAAMO,EAAAA,EACNC,QAAS,CACLC,MAAON,EAASM,QAOhC,IACCC,OAAM,WAEHd,EAAS,CACLI,KAAMW,EAAAA,GACNH,QAAS,CAACI,aAAc,4CAEhC,IACCC,SAAQ,WACLjB,EAAS,CACLI,KAAMc,EAAAA,GACNN,QAAS,CACLO,WAAW,IAGvB,GACJ,GAAG,CAAClB,KAGA,UAAC,IAAS,CAACmB,GAAI,CAACC,GAAI,GAAG,WAEnB,UAAC,IAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQ,WAC3D,SAAC,IAAY,CAACC,SAAS,QAAQL,GAAI,CAACM,GAAI,MACxC,SAAC,IAAU,CAACC,QAAQ,KAAI,SAAC,iBAE7B,SAAC,IAAO,CAACP,GAAI,CAACQ,GAAI,EAAGC,GAAI,MAGzB,SAAC,cAAwB,CAACC,MAAO/B,EAAS,UACtC,SAAC,KAAM,QAIvB,C,uPC5EaD,EAAgD,CACzDqB,WAAW,EACXN,MAAO,GACPkB,OAAO,EACPf,aAAc,IAGLgB,GAAkBC,EAAAA,EAAAA,eAAmCnC,GAGrDO,EAAa,aACbM,EAAe,eACfO,EAAoB,oBACpBZ,EAAe,eACfS,EAAQ,QASRlB,EAAkB,WAAyF,IAAxFqC,EAAM,UAAD,6CAACpC,EAA0BqC,EAA6B,uCACzF,OAAQA,EAAO/B,MACX,KAAKO,EAAe,IAAD,EACf,OAAO,kBACAuB,GAAK,IACRH,OAAO,EACPlB,MAAqB,QAAhB,EAAEsB,EAAOvB,eAAO,aAAd,EAAgBC,QAG/B,KAAKK,EAAoB,IAAD,EACpB,OAAO,kBACAgB,GAAK,IACRf,UAAyB,QAAhB,EAAEgB,EAAOvB,eAAO,aAAd,EAAgBO,YAGnC,KAAKd,EACL,KAAKC,EACD,MAAO,CACHa,WAAW,EACXN,MAAO,GACPkB,OAAO,EACPf,aAAc,IAGtB,KAAKD,EAAQ,IAAD,EACR,OAAO,kBACAmB,GAAK,IACRH,OAAO,EACPf,cAA4B,QAAd,EAAAmB,EAAOvB,eAAO,aAAd,EAAgBI,eAAgB,8BAGtD,QACI,OAAO,UAAIkB,GAGvB,C","sources":["pages/projects/index.tsx","pages/projects/reducer.ts"],"sourcesContent":["import React, {useEffect, useReducer} from 'react';\r\nimport {Outlet, useLoaderData} from 'react-router-dom';\r\n// @mui components\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\n// @mui icons\r\nimport TerminalIcon from '@mui/icons-material/Terminal';\r\n// @types\r\nimport {GetProjectsAPIResponse} from './types';\r\n// projects Context\r\nimport { \r\n    ProjectsContext,\r\n    ProjectsReducer,\r\n    INITIAL_PROJECTS_CONTEXT,\r\n    // Action types\r\n    UPDATE_ITEMS,\r\n    UPDATE_IS_LOADING,\r\n    DELETE_ITEMS,\r\n    ERROR,\r\n    INITIALIZE\r\n} from './reducer';\r\n\r\n/* The portfolio page */\r\nconst Portfolio: React.FC = () => {\r\n\r\n    const [pContext, dispatch] = useReducer(ProjectsReducer, INITIAL_PROJECTS_CONTEXT);\r\n    const dataAPI = useLoaderData() as {response: Promise<Response>};\r\n\r\n    // Clean reducer every mount and unmount\r\n    useEffect(() => {\r\n        dispatch({type: INITIALIZE});\r\n        return () => dispatch({type: DELETE_ITEMS});\r\n    }, []);\r\n\r\n    // Fetch data from API endpoint\r\n    useEffect(() => {\r\n        // Fetch\r\n        dataAPI.response\r\n        .then((response) => response.json())\r\n        .then((response: GetProjectsAPIResponse) => {\r\n            if (response.status === \"OK\") {\r\n                dispatch({\r\n                    type: UPDATE_ITEMS,\r\n                    payload: {\r\n                        items: response.items\r\n                    }\r\n                })\r\n            } else {\r\n                // An error occured\r\n                throw 404;\r\n            }\r\n        })\r\n        .catch(() => {\r\n            // Couldnt connect to the server\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: {errorMessage: \"Sorry, an unknown server error occured!\"}\r\n            })\r\n        })\r\n        .finally(() => {\r\n            dispatch({\r\n                type: UPDATE_IS_LOADING,\r\n                payload: {\r\n                    isLoading: false\r\n                }\r\n            })\r\n        });\r\n    }, [dataAPI]);\r\n    \r\n    return (\r\n        <Container sx={{py: 2}}>\r\n            {/* Header */}\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <TerminalIcon fontSize=\"large\" sx={{mr: 1}}/>\r\n                <Typography variant=\"h4\">Projects</Typography>\r\n            </Box>\r\n            <Divider sx={{mt: 1, mb: 2}}/>\r\n\r\n            {/* Portfolio cards */}\r\n            <ProjectsContext.Provider value={pContext}>\r\n                <Outlet/>\r\n            </ProjectsContext.Provider>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Portfolio;","import {createContext} from 'react';\r\nimport {ProjectItems} from './types';\r\n\r\nexport interface ProjectsContextType {\r\n    isLoading: boolean;\r\n    items: ProjectItems[];\r\n    error: boolean;\r\n    errorMessage: string;\r\n};\r\n\r\nexport const INITIAL_PROJECTS_CONTEXT: ProjectsContextType = {\r\n    isLoading: true,\r\n    items: [],\r\n    error: false,\r\n    errorMessage: \"\",\r\n};\r\n\r\nexport const ProjectsContext = createContext<ProjectsContextType>(INITIAL_PROJECTS_CONTEXT);\r\n\r\n// Actions\r\nexport const INITIALIZE = \"INITIALIZE\";\r\nexport const UPDATE_ITEMS = \"UPDATE_ITEMS\";\r\nexport const UPDATE_IS_LOADING = \"UPDATE_IS_LOADING\";\r\nexport const DELETE_ITEMS = \"DELETE_ITEMS\";\r\nexport const ERROR = \"ERROR\";\r\n\r\n// Action dispatch type\r\nexport interface ProjectsContextAction {\r\n    type: \"UPDATE_ITEMS\" | \"UPDATE_IS_LOADING\" | \"DELETE_ITEMS\" | \"ERROR\" | \"INITIALIZE\";\r\n    payload?: Partial<ProjectsContextType>;\r\n};\r\n\r\n// Reducer\r\nexport const ProjectsReducer = (state=INITIAL_PROJECTS_CONTEXT, action: ProjectsContextAction): ProjectsContextType => {\r\n    switch (action.type) {\r\n        case UPDATE_ITEMS: {\r\n            return {\r\n                ...state,\r\n                error: false,\r\n                items: action.payload?.items as ProjectsContextType[\"items\"]\r\n            }\r\n        };\r\n        case UPDATE_IS_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload?.isLoading as ProjectsContextType[\"isLoading\"]\r\n            }\r\n        };\r\n        case INITIALIZE:\r\n        case DELETE_ITEMS: {\r\n            return {\r\n                isLoading: true,\r\n                items: [],\r\n                error: false,\r\n                errorMessage: \"\"\r\n            }\r\n        };\r\n        case ERROR: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                errorMessage: action.payload?.errorMessage || \"An unknown error occured.\"\r\n            }\r\n        };\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};"],"names":["useReducer","ProjectsReducer","INITIAL_PROJECTS_CONTEXT","pContext","dispatch","dataAPI","useLoaderData","useEffect","type","INITIALIZE","DELETE_ITEMS","response","then","json","status","UPDATE_ITEMS","payload","items","catch","ERROR","errorMessage","finally","UPDATE_IS_LOADING","isLoading","sx","py","display","alignItems","justifyContent","fontSize","mr","variant","mt","mb","value","error","ProjectsContext","createContext","state","action"],"sourceRoot":""}